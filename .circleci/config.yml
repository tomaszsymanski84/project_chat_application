# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

defaults: &defaults
  working_directory: ~/repo

version: 2.1
orbs:
  node: circleci/node@5.1.0

jobs:
  build_and_test:
    <<: *defaults
    executor:
      name: node/default
      resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Build
          command: yarn build
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Tests
          command: yarn test
      - run:
          name: Typecheck
          command: yarn typecheck

  release_tags:
    <<: *defaults
    executor:
      name: node/default
      resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Set Git Identity
          command: |
            git config --global user.email "ci@infinite.red"
            git config --global user.name "Infinite Red"
            git remote set-url origin https://$GITHUB_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git
      - run:
          name: Create git tags and commits for releases
          command: yarn release:tags
      - run:
          name: Push new tags and commitst to release branch
          command: git push origin $CIRCLE_BRANCH --tags

  release_package:
    <<: *defaults
    executor:
      name: node/default
      resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Set npm token
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Validate npm identity
          command: npm whoami
      - run:
          name: Release to npm and github
          command: |
            yarn release:artifacts $CIRCLE_TAG

  release_app_windows:
    <<: *defaults
    docker:
      - image: electronuserland/builder:wine
    environment:
      BUILD_TARGET: windows
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Release Windows app
          command: yarn workspace reactotron-app release:artifacts

  release_app_linux:
    <<: *defaults
    executor:
      name: node/default
      resource_class: large
    environment:
      BUILD_TARGET: linux
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Update apt-get
          command: sudo apt update
      - run:
          name: Install dependencies
          command: sudo apt-get install --no-install-recommends -y libopenjp2-tools rpm
      - run:
          name: Release Linux app
          command: yarn workspace reactotron-app release:artifacts

  release_app_macos:
    <<: *defaults
    macos:
      xcode: "13.3.1"
    environment:
      BUILD_TARGET: macos
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Decode Certificates
          command: echo --no-newline "$ReactotronCerts" | base64 --decode > apps/app/Certificates.p12
      - run:
          name: Install Bundler
          command: gem install bundler:1.16.1
      - run:
          name: Install Gems
          command: |
            cd apps/app
            bundle install
      - run:
          name: Install Cert
          command: |
            cd apps/app 
            bundle exec fastlane setup
      - run:
          name: Release Mac app
          command: yarn workspace reactotron-app release:artifacts

workflows:
  pull_request:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: &release_branch_names
                - master
                - beta
                - alpha

  release:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: *release_branch_names
      - release_tags:
          context:
            - infinitered-npm-package
          filters:
            branches:
              only: *release_branch_names
          requires:
            - build_and_test
      - release_package:
          context:
            - infinitered-npm-package
          filters:
            branches: &release_branch_filter
              ignore: /.*/ # ignore all branches
            tags:
              only:
                - /^(?!reactotron-app)reactotron-.*@.*/ # matches 'reactotron-core-ui@2.0.1' but not 'reactotron-app@3.0.0'
      - release_app_windows:
          context:
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: &release_app_filter
                - /^reactotron-app@.*/
      - release_app_macos:
          context:
            - ReactotronCerts
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: *release_app_filter
      - release_app_linux:
          context:
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: *release_app_filter
# VS Code Extension Version: 1.5.1
